 <Window x:Class="KanbanBoardApp.View.CardDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KanbanBoardApp.View"
        xmlns:CC="clr-namespace:KanbanBoardApp.CustomControls"
        mc:Ignorable="d"
        Title="Kanban Card" Width="350" SizeToContent="Height"
        ResizeMode="NoResize">
     
     <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>


    <StackPanel Orientation="Vertical">
        <!-- Card Header-->
        <Grid Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" 
                       Text="KANBAN Card" 
                       FontFamily="Georgia" FontSize="28" FontWeight="Bold" 
                       VerticalAlignment="Center" />
            <TextBlock Grid.Column="1" 
                       FontSize="16" 
                       VerticalAlignment="Bottom">
                <TextBlock.Text>
                    <MultiBinding StringFormat="ID: {0}">
                        <Binding Path="NextId"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

        </Grid>
        

        <!-- Card Content -->
        <Grid Margin="10,5,10,0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Grid for Title and Owner for symmetric allignment -->
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
                <Grid.RowDefinitions>
                    <!-- Title Row-->
                    <RowDefinition Height="Auto"/>
                    <!-- Owner Row -->
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <!--Column Label-->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Column Input-->
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Card Title -->
                <TextBlock Grid.Row="0"  Grid.Column="0" Text="Card Title: " TextAlignment="Right"/>
                <CC:PlaceHolderTextBox Grid.Row="0" Grid.Column="1" x:Name="TitleTextBox" PlaceHolder="" CornerRadius="5" BorderThickness="1" Padding="1" Margin="0,0,0,5"
                                       Text="{Binding Card.Title, UpdateSourceTrigger=PropertyChanged}"/>

                <!-- Card Owner -->
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Owner: " TextAlignment="Right"/>
                <CC:PlaceHolderTextBox Grid.Row="1" Grid.Column="1" PlaceHolder="" CornerRadius="5" BorderThickness="1" Padding="1"
                           Text="{Binding Card.Owner, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>

            <!-- Card Status -->
            <TextBlock Grid.Row="2" Grid.Column="0"
                       Text="Status"
                       Margin="5,0,0,0"
                       HorizontalAlignment="Left"/>
            <ComboBox Grid.Row="3" Grid.Column="0"
                      Margin="5"
                      ItemsSource="{Binding Columns}"
                      DisplayMemberPath="Title"
                      SelectedItem="{Binding SelectedColumn, Mode=TwoWay}"/>
            
            <!-- Card Date -->
            <TextBlock Grid.Row="2" Grid.Column="1"
                       Text="Due Date"
                       Margin="5,0,0,0"
                       HorizontalAlignment="Left"/>
            <DatePicker Grid.Row="3" Grid.Column="1" 
                        Margin="5" 
                        SelectedDate="{Binding Card.DueDate, UpdateSourceTrigger=PropertyChanged}"/>

            <!-- Card Priority -->
            <TextBlock Grid.Row="4" Grid.Column="1"
                       Text="Priority"
                       Margin="5,0,0,0"
                       HorizontalAlignment="Left"/>
            <ComboBox Grid.Row="5" Grid.Column="1"
                      Margin="5"
                      ItemsSource="{Binding UrgencyCollection}"
                      SelectedItem="{Binding Card.Urgency, UpdateSourceTrigger=PropertyChanged}"/>
            
        </Grid>
        
        <!-- Card Description -->
        <Expander Header="Description" IsExpanded="True" Margin="10,5,10,5">
            <CC:PlaceHolderTextBox TextWrapping="Wrap" 
                                   AcceptsReturn="True" 
                                   VerticalContentAlignment="Top"
                                   Padding="1"
                                   Height="100" 
                                   CornerRadius="5" 
                                   BorderThickness="1"
                                   PlaceHolder="" Text="{Binding Card.Description, UpdateSourceTrigger=PropertyChanged}"/>
        </Expander>

        <!-- Card Comments/Notes  -->
        <Expander Header="Comments" IsExpanded="True" Margin="10,5,10,5">
            <CC:PlaceHolderTextBox TextWrapping="Wrap" 
                                    AcceptsReturn="True" 
                                    VerticalContentAlignment="Top"
                                    Padding="1"
                                    Height="100" 
                                    CornerRadius="5" 
                                    BorderThickness="1"
                                    PlaceHolder="" Text="{Binding Card.Comment, UpdateSourceTrigger=PropertyChanged}"/>
        </Expander> 

        <Expander Header="Card History" IsExpanded="False" Margin="10,5,10,5">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ListView ItemsSource="{Binding Card.History}" MaxHeight="150">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Time" DisplayMemberBinding="{Binding Timestamp}" Width="120"/>
                            <GridViewColumn Header="Property" DisplayMemberBinding="{Binding PropertyChanged}" Width="80"/>
                            <GridViewColumn Header="Old" DisplayMemberBinding="{Binding OldValue}" Width="80"/>
                            <GridViewColumn Header="New" DisplayMemberBinding="{Binding NewValue}" Width="80"/>
                            <GridViewColumn Header="By" DisplayMemberBinding="{Binding ChangedBy}" Width="80"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </ScrollViewer>
        </Expander>

        <!-- Row with buttons-->
        <StackPanel Orientation="Horizontal" Height="45" Margin="10,5,5,10" HorizontalAlignment="Center">
            <!--  Button Save -->
            <Button Width="80"
                    Content="Save"
                    Cursor="Hand"
                    Margin="5,5,10,5" 
                    Background="LightGreen" BorderBrush="LightGreen" 
                    Click="btnSave_Card"/>
            <!--  Button Delete -->
            <Button Width="80"
                    Content="Delete" 
                    Cursor="Hand"
                    Margin="5,5,10,5" 
                    Background="IndianRed" BorderBrush="IndianRed"
                    Click="btnDelete_Card"
                    Visibility="{Binding IsExistingCard, Converter={StaticResource BoolToVisibilityConverter}}"/>
            
            <!--  Button Exit -->
            <Button Width="80"
                    Content="Exit" 
                    Margin="5,5,10,5" 
                    Click="btnClose_window" 
                    Cursor="Hand"/>
        </StackPanel>
    </StackPanel>

</Window>
